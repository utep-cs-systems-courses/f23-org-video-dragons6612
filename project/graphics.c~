//graphics()
#include <msp430.h>
#include <libTimer.h>
#include "led.h"
#include "switches.h"
#include "buzzer.h"
#include "lcdutils.h"
#include "lcddraw.h"

unsigned short sqColors[] = {COLOR_RED, COLOR_GREEN, COLOR_ORANGE, COLOR_BLUE};
#define BG_COLOR COLOR_BLACK
  
// WARNING: LCD DISPLAY USES P1.0.  Do not touch!!! 

#define LED BIT6		/* note that bit zero req'd for display */

int redrawScreen = 1;

int switches = 0;


void f1(){
  clearScreen(COLOR_BLUE);
  for(int i = 0; i < 30; i++){
    drawPixel(i,i, COLOR_PINK);
    drawPixel(i, 30 - i, COLOR_PINK);
  }
}
	  
void f2(){
  clearScreen(COLOR_BLUE);
  for(int i = 0; i < 30; i++){
    drawPixel(30 + i, 30 - i, COLOR_PINK);
  }
}

void f3(){
  clearScreen(COLOR_BLACK);
  u_char width = screenWidth, height = screenHeight;

  //clearScreen(COLOR_BLACK);

  drawString5x7(20,20, "hello", COLOR_GREEN, COLOR_RED);

  fillRectangle(30,30, 60, 60, COLOR_ORANGE);
}

void main()
{
  
  P1DIR |= LED;		/**< Green led on when CPU on */
  P1OUT |= LED;
  configureClocks();
  lcd_init();
  led_init();
  buzzer_init();
  switch_init();
  
  enableWDTInterrupts();      /**< enable periodic interrupt */
  or_sr(0x8);	              /**< GIE (enable interrupts) */
  
  clearScreen(BG_COLOR);
  while (1) {			/* forever */
    if (redrawScreen) {
      redrawScreen = 0;
// update_shape();
    }
    P1OUT &= ~LED;	/* led off */
    or_sr(0x10);	/**< CPU OFF */
    P1OUT |= LED;	/* led on */
  }
}
